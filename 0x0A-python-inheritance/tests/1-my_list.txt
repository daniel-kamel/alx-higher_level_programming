Tests for 1-my_list module

Import the module
    >>> MyList = __import__("1-my_list").MyList

Create an instance
    >>> list1 = MyList()
    >>> list1.append(1)
    >>> list1.append(2)
    >>> list1.append(3)
    >>> list1.append(4)

Correct Class Type test:
    >>> ml = MyList()
    >>> type(ml) == MyList
    True


Check if MyList is a subclass of list
    >>> issubclass(MyList, list)
    True

Check if list1 is instance of MyList
    >>> isinstance(list1, MyList)
    True

print_sorted method is an instance method:
    >>> type(MyList.__dict__['print_sorted'])
    <class 'function'>

print_sorted method called via class with no args:
    >>> list1.__class__.print_sorted()
    Traceback (most recent call last):
    TypeError: MyList.print_sorted() missing 1 required positional argument: 'self'

print_sorted called with a argument
    >>> list1.print_sorted([5, 6, 7])
    Traceback (most recent call last):
    TypeError: MyList.print_sorted() takes 1 positional argument but 2 were given

print_sorted called with 2 arguments
    >>> list1.print_sorted([5, 6, 7], 2)
    Traceback (most recent call last):
    TypeError: MyList.print_sorted() takes 1 positional argument but 3 were given

Test empty list
    >>> test_list = MyList([])
    >>> test_list.print_sorted()
    []

Test unsorted list
    >>> test_list = MyList([4, 8, 2, 9, 1])
    >>> test_list.print_sorted()
    [1, 2, 4, 8, 9]

Test unsorted list with negative numbers
    >>> test_list = MyList([-4, 8, 2, -9, 1])
    >>> test_list.print_sorted()
    [-9, -4, 1, 2, 8]

Test already sorted list
    >>> test_list = MyList([1, 2, 3, 4])
    >>> test_list.print_sorted()
    [1, 2, 3, 4]

Test already sorted list with negative numbers
    >>> test_list = MyList([-2, -1, 0, 1, 2])
    >>> test_list.print_sorted()
    [-2, -1, 0, 1, 2]

Check if the original list remains unchanged after sorting
    >>> test_list = MyList([3, 1, 5, 12, 2])
    >>> test_list.print_sorted()
    [1, 2, 3, 5, 12]
    >>> test_list
    [3, 1, 5, 12, 2]

Test list with duplicates
    >>> test_list = MyList([3, 1,3, 5, 1])
    >>> test_list.print_sorted()
    [1, 1, 3, 3, 5]

Test that append() works
    >>> test_list = MyList()
    >>> test_list.append(1)
    >>> test_list.append(2)
    >>> test_list.append(-2)
    >>> test_list
    [1, 2, -2]
    >>> test_list.print_sorted()
    [-2, 1, 2]
